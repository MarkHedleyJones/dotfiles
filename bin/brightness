#!/usr/bin/env bash

# Take a single argument which is the brightness level
# e.g. ./brightness

if [ "$#" -ne 1 ]; then
	echo "Usage: $0 [+-]<brightness>"
	echo ""
	echo "Examples:"
	echo "set the brightness of the monitor to 50%"
	echo "$0 50"
	echo "Increase the brightness of the monitor by 10%"
	echo "$0 +10"
	echo "Decrease the brightness of the monitor by 10%"
	echo "$0 -10"
	exit 1
fi

brightness_file=${HOME}/.brightness
if [ ! -f $brightness_file ]; then
	echo "50" >$brightness_file
fi
current_brightness=$(cat $brightness_file)

# Auto-detect Dell monitor bus number
bus_cache_file=${HOME}/.brightness_bus

detect_dell_bus() {
	ddcutil detect 2>/dev/null | awk '
        /^Display [0-9]+$/ { in_display=1; bus=""; mfg="" }
        in_display && /I2C bus:/ {
            match($0, /\/dev\/i2c-([0-9]+)/, arr)
            bus=arr[1]
        }
        in_display && /Mfg id:/ && /DEL/ { mfg="DEL" }
        in_display && /^$/ {
            if (mfg == "DEL" && bus != "") {
                print bus
                exit
            }
            in_display=0
        }
    '
}

if [ ! -f "$bus_cache_file" ]; then
	bus_number=$(detect_dell_bus)
	if [ -n "$bus_number" ]; then
		echo "$bus_number" >"$bus_cache_file"
	else
		bus_number=15
	fi
else
	bus_number=$(cat "$bus_cache_file")
fi

if [[ $1 == +* ]]; then
	current_brightness=$((current_brightness + ${1#+}))
elif [[ $1 == -* ]]; then
	current_brightness=$((current_brightness - ${1#-}))
else
	current_brightness=$1
fi

if [ $current_brightness -lt 0 ]; then
	current_brightness=0
elif [ $current_brightness -gt 100 ]; then
	current_brightness=100
fi

# If you can't find the bus number, run ddcutil detect
ddcutil --bus=${bus_number} setvcp 10 ${current_brightness}

if [ $? -ne 0 ]; then
	echo "Failed with cached bus $bus_number, re-detecting Dell monitor..."
	rm -f "$bus_cache_file"
	bus_number=$(detect_dell_bus)
	if [ -n "$bus_number" ]; then
		echo "$bus_number" >"$bus_cache_file"
		echo "Found Dell monitor on bus $bus_number, retrying..."
		ddcutil --bus=${bus_number} setvcp 10 ${current_brightness}
		if [ $? -ne 0 ]; then
			echo "Failed to set brightness even after re-detection"
			exit 1
		fi
	else
		echo "Could not detect Dell monitor. Run 'ddcutil detect' to check available displays."
		exit 1
	fi
fi

contrast=$((${current_brightness} * 35 / 100 + 40))
if [[ $contrast -lt 30 ]]; then
	contrast=30
elif [[ $contrast -gt 100 ]]; then
	contrast=100
fi
ddcutil --bus=${bus_number} setvcp 12 ${contrast}

if [ ${current_brightness} -eq 100 ]; then
	# 9300k
	ddcutil --bus=${bus_number} setvcp 14 0x06
elif [ ${current_brightness} -ge 60 ]; then
	# 7500k
	ddcutil --bus=${bus_number} setvcp 14 0x05
elif [ ${current_brightness} -ge 20 ]; then
	# 6500k
	ddcutil --bus=${bus_number} setvcp 14 0x0B
else
	# 5000k
	ddcutil --bus=${bus_number} setvcp 14 0x04
fi

echo "${current_brightness}" >${brightness_file}

# Path to the brightness control file (adjust if necessary)
path_brightness="/sys/class/backlight/intel_backlight/brightness"
path_brightness_max="/sys/class/backlight/intel_backlight/max_brightness"

# Get the maximum brightness level
brightness_max=$(cat "$path_brightness_max")
echo $brightness_max
# Calculate the brightness value
# intel_brightness=$((brightness_max * current_brightness / 100))
intel_brightness=$((brightness_max * (current_brightness * current_brightness) / 10000))

# Set the brightness
echo "$intel_brightness" | tee "$path_brightness"
