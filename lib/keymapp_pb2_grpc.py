# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import keymapp_pb2 as keymapp__pb2


class KeyboardServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetStatus = channel.unary_unary(
        '/api.KeyboardService/GetStatus',
        request_serializer=keymapp__pb2.GetStatusRequest.SerializeToString,
        response_deserializer=keymapp__pb2.GetStatusReply.FromString,
        )
    self.GetKeyboards = channel.unary_unary(
        '/api.KeyboardService/GetKeyboards',
        request_serializer=keymapp__pb2.GetKeyboardsRequest.SerializeToString,
        response_deserializer=keymapp__pb2.GetKeyboardsReply.FromString,
        )
    self.ConnectKeyboard = channel.unary_unary(
        '/api.KeyboardService/ConnectKeyboard',
        request_serializer=keymapp__pb2.ConnectKeyboardRequest.SerializeToString,
        response_deserializer=keymapp__pb2.ConnectKeyboardReply.FromString,
        )
    self.ConnectAnyKeyboard = channel.unary_unary(
        '/api.KeyboardService/ConnectAnyKeyboard',
        request_serializer=keymapp__pb2.ConnectAnyKeyboardRequest.SerializeToString,
        response_deserializer=keymapp__pb2.ConnectKeyboardReply.FromString,
        )
    self.DisconnectKeyboard = channel.unary_unary(
        '/api.KeyboardService/DisconnectKeyboard',
        request_serializer=keymapp__pb2.DisconnectKeyboardRequest.SerializeToString,
        response_deserializer=keymapp__pb2.DisconnectKeyboardReply.FromString,
        )
    self.SetLayer = channel.unary_unary(
        '/api.KeyboardService/SetLayer',
        request_serializer=keymapp__pb2.SetLayerRequest.SerializeToString,
        response_deserializer=keymapp__pb2.SetLayerReply.FromString,
        )
    self.UnsetLayer = channel.unary_unary(
        '/api.KeyboardService/UnsetLayer',
        request_serializer=keymapp__pb2.SetLayerRequest.SerializeToString,
        response_deserializer=keymapp__pb2.SetLayerReply.FromString,
        )
    self.SetRGBLed = channel.unary_unary(
        '/api.KeyboardService/SetRGBLed',
        request_serializer=keymapp__pb2.SetRGBLedRequest.SerializeToString,
        response_deserializer=keymapp__pb2.SetRGBLedReply.FromString,
        )
    self.SetRGBAll = channel.unary_unary(
        '/api.KeyboardService/SetRGBAll',
        request_serializer=keymapp__pb2.SetRGBAllRequest.SerializeToString,
        response_deserializer=keymapp__pb2.SetRGBAllReply.FromString,
        )
    self.SetStatusLed = channel.unary_unary(
        '/api.KeyboardService/SetStatusLed',
        request_serializer=keymapp__pb2.SetStatusLedRequest.SerializeToString,
        response_deserializer=keymapp__pb2.SetStatusLedReply.FromString,
        )
    self.IncreaseBrightness = channel.unary_unary(
        '/api.KeyboardService/IncreaseBrightness',
        request_serializer=keymapp__pb2.IncreaseBrightnessRequest.SerializeToString,
        response_deserializer=keymapp__pb2.BrightnessUpdateReply.FromString,
        )
    self.DecreaseBrightness = channel.unary_unary(
        '/api.KeyboardService/DecreaseBrightness',
        request_serializer=keymapp__pb2.DecreaseBrightnessRequest.SerializeToString,
        response_deserializer=keymapp__pb2.BrightnessUpdateReply.FromString,
        )


class KeyboardServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetStatus(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetKeyboards(self, request, context):
    """Returns a list of all detected keyboards.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConnectKeyboard(self, request, context):
    """Connects to a keyboard using given an id retrieved from GetKeyboards.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ConnectAnyKeyboard(self, request, context):
    """Connects to the first available keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisconnectKeyboard(self, request, context):
    """Disconnects to a keyboard using given an id retrieved from GetKeyboards.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetLayer(self, request, context):
    """Sets the active layer of a connected keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UnsetLayer(self, request, context):
    """Unsets a previously set layer.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRGBLed(self, request, context):
    """Sets the color of a specific LED on the keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRGBAll(self, request, context):
    """Sets the color of all LEDs on the keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetStatusLed(self, request, context):
    """Sets the status LED on the keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IncreaseBrightness(self, request, context):
    """Increases the brightness of the keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DecreaseBrightness(self, request, context):
    """Decreases the brightness of the keyboard.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KeyboardServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetStatus,
          request_deserializer=keymapp__pb2.GetStatusRequest.FromString,
          response_serializer=keymapp__pb2.GetStatusReply.SerializeToString,
      ),
      'GetKeyboards': grpc.unary_unary_rpc_method_handler(
          servicer.GetKeyboards,
          request_deserializer=keymapp__pb2.GetKeyboardsRequest.FromString,
          response_serializer=keymapp__pb2.GetKeyboardsReply.SerializeToString,
      ),
      'ConnectKeyboard': grpc.unary_unary_rpc_method_handler(
          servicer.ConnectKeyboard,
          request_deserializer=keymapp__pb2.ConnectKeyboardRequest.FromString,
          response_serializer=keymapp__pb2.ConnectKeyboardReply.SerializeToString,
      ),
      'ConnectAnyKeyboard': grpc.unary_unary_rpc_method_handler(
          servicer.ConnectAnyKeyboard,
          request_deserializer=keymapp__pb2.ConnectAnyKeyboardRequest.FromString,
          response_serializer=keymapp__pb2.ConnectKeyboardReply.SerializeToString,
      ),
      'DisconnectKeyboard': grpc.unary_unary_rpc_method_handler(
          servicer.DisconnectKeyboard,
          request_deserializer=keymapp__pb2.DisconnectKeyboardRequest.FromString,
          response_serializer=keymapp__pb2.DisconnectKeyboardReply.SerializeToString,
      ),
      'SetLayer': grpc.unary_unary_rpc_method_handler(
          servicer.SetLayer,
          request_deserializer=keymapp__pb2.SetLayerRequest.FromString,
          response_serializer=keymapp__pb2.SetLayerReply.SerializeToString,
      ),
      'UnsetLayer': grpc.unary_unary_rpc_method_handler(
          servicer.UnsetLayer,
          request_deserializer=keymapp__pb2.SetLayerRequest.FromString,
          response_serializer=keymapp__pb2.SetLayerReply.SerializeToString,
      ),
      'SetRGBLed': grpc.unary_unary_rpc_method_handler(
          servicer.SetRGBLed,
          request_deserializer=keymapp__pb2.SetRGBLedRequest.FromString,
          response_serializer=keymapp__pb2.SetRGBLedReply.SerializeToString,
      ),
      'SetRGBAll': grpc.unary_unary_rpc_method_handler(
          servicer.SetRGBAll,
          request_deserializer=keymapp__pb2.SetRGBAllRequest.FromString,
          response_serializer=keymapp__pb2.SetRGBAllReply.SerializeToString,
      ),
      'SetStatusLed': grpc.unary_unary_rpc_method_handler(
          servicer.SetStatusLed,
          request_deserializer=keymapp__pb2.SetStatusLedRequest.FromString,
          response_serializer=keymapp__pb2.SetStatusLedReply.SerializeToString,
      ),
      'IncreaseBrightness': grpc.unary_unary_rpc_method_handler(
          servicer.IncreaseBrightness,
          request_deserializer=keymapp__pb2.IncreaseBrightnessRequest.FromString,
          response_serializer=keymapp__pb2.BrightnessUpdateReply.SerializeToString,
      ),
      'DecreaseBrightness': grpc.unary_unary_rpc_method_handler(
          servicer.DecreaseBrightness,
          request_deserializer=keymapp__pb2.DecreaseBrightnessRequest.FromString,
          response_serializer=keymapp__pb2.BrightnessUpdateReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.KeyboardService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
